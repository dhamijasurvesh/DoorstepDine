# Generated by Django 5.1.2 on 2024-10-30 15:02

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Area",
            fields=[
                (
                    "area_id",
                    models.CharField(max_length=50, primary_key=True, serialize=False),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Manager",
            fields=[
                (
                    "m_id",
                    models.CharField(max_length=50, primary_key=True, serialize=False),
                ),
                ("m_name", models.CharField(max_length=100)),
                ("phone_number", models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name="OfficeEmployee",
            fields=[
                ("emp_name", models.CharField(max_length=200)),
                (
                    "emp_id",
                    models.CharField(max_length=20, primary_key=True, serialize=False),
                ),
                ("phone_number", models.CharField(max_length=10)),
                ("email_id", models.EmailField(max_length=150)),
                (
                    "gender",
                    models.CharField(
                        choices=[("M", "Male"), ("F", "Female")], max_length=1
                    ),
                ),
                ("hire_date", models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name="TypeOfSubscription",
            fields=[
                (
                    "sub_id",
                    models.CharField(max_length=10, primary_key=True, serialize=False),
                ),
                ("validity_in_months", models.IntegerField()),
                ("price", models.IntegerField()),
                (
                    "discount_in_perc",
                    models.DecimalField(decimal_places=2, max_digits=4),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DeliveryAgent",
            fields=[
                (
                    "d_id",
                    models.CharField(max_length=10, primary_key=True, serialize=False),
                ),
                ("d_name", models.CharField(max_length=100)),
                ("phone_number", models.CharField(max_length=10)),
                ("plate_number", models.CharField(max_length=10)),
                (
                    "area_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="App.area"
                    ),
                ),
            ],
            options={
                "db_table": "delivery_agents",
            },
        ),
        migrations.AddField(
            model_name="area",
            name="area_manager",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="App.manager"
            ),
        ),
        migrations.CreateModel(
            name="Restaurant",
            fields=[
                (
                    "rest_id",
                    models.CharField(max_length=10, primary_key=True, serialize=False),
                ),
                ("rest_name", models.CharField(max_length=100)),
                (
                    "r_type",
                    models.CharField(
                        choices=[
                            ("VEG", "Veg"),
                            ("NON-VEG", "Non-Veg"),
                            ("BOTHF", "Both"),
                        ],
                        max_length=7,
                    ),
                ),
                ("phone_number", models.CharField(max_length=10)),
                ("address", models.CharField(max_length=200)),
                ("email_id", models.EmailField(blank=True, max_length=100, null=True)),
                ("poc_name", models.CharField(blank=True, max_length=100, null=True)),
                ("open_time", models.TimeField()),
                ("close_time", models.TimeField()),
                ("rest_rating", models.FloatField(default=0)),
                (
                    "area",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="App.area",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FoodItem",
            fields=[
                (
                    "product_id",
                    models.CharField(max_length=10, primary_key=True, serialize=False),
                ),
                ("product_name", models.CharField(max_length=100)),
                (
                    "product_type",
                    models.CharField(
                        choices=[("VEG", "Vegetarian"), ("NON-VEG", "Non-Vegetarian")],
                        max_length=700,
                    ),
                ),
                ("price", models.PositiveIntegerField()),
                ("image_path", models.CharField(max_length=300)),
                (
                    "rest_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="App.restaurant"
                    ),
                ),
            ],
            options={
                "db_table": "food_items",
            },
        ),
        migrations.CreateModel(
            name="Customer",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "cust_id",
                    models.CharField(max_length=10, primary_key=True, serialize=False),
                ),
                ("first_name", models.CharField(max_length=50, null=True)),
                ("last_name", models.CharField(blank=True, max_length=50)),
                ("phone_number", models.CharField(max_length=10, null=True)),
                ("address", models.CharField(blank=True, max_length=300, null=True)),
                ("email_id", models.EmailField(max_length=254, unique=True)),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "sub_id",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="App.typeofsubscription",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "order_id",
                    models.CharField(max_length=10, primary_key=True, serialize=False),
                ),
                ("quantity", models.PositiveIntegerField()),
                (
                    "discount_in_perc",
                    models.DecimalField(decimal_places=2, max_digits=4),
                ),
                ("order_amt", models.PositiveIntegerField()),
                ("final_discounted_amt", models.FloatField()),
                ("rest_rating_given", models.FloatField(null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PREPARING", "Preparing"),
                            ("OUT FOR DELIVERY", "Out for Delivery"),
                            ("DELIVERED", "Delivered"),
                            ("CANCELLED", "Cancelled"),
                        ],
                        default="PREPARING",
                        max_length=20,
                    ),
                ),
                ("feedback", models.CharField(blank=True, max_length=500, null=True)),
                (
                    "d_id",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="App.deliveryagent",
                    ),
                ),
                (
                    "product_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="App.fooditem"
                    ),
                ),
                (
                    "cust_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "orders",
            },
        ),
        migrations.CreateModel(
            name="Cart",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("quantity", models.PositiveIntegerField()),
                (
                    "product_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="App.fooditem"
                    ),
                ),
                (
                    "cust_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "cart",
                "unique_together": {("cust_id", "product_id")},
            },
        ),
    ]
